@page
@model GoogleTrends.RazorSite.Pages.TrendsApi.ExploreModel
@{
    ViewData["Title"] = Model.SearchQuery;
}

<style>
    .noBar::-webkit-scrollbar {
        display: none;
    }

    .noBar {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
</style>

<canvas style="height:25%" id="timeChart"></canvas>

<h3 class="display-6 position-fixed start-50 top-0 translate-middle-x">@Model.SearchQuery</h3>

<div class="position-fixed w-25 h-75 overflow-hidden" style="top: 25%; left: 5%">
    <h2 class="display-4">Related Queries</h2>
    <hr />
    <div class="w-100 h-75 overflow-scroll noBar">
        @foreach (var relatedQuery in @Model.RelatedQueries.SelectMany(i => i.RankedKeywords))
        {
            <p><a href="@relatedQuery.Link">@relatedQuery.Query - @relatedQuery.FormattedValue</a></p>
            <hr />
        }
    </div>
</div>

<div class="position-fixed w-25 h-75 overflow-hidden" style="top: 25%; left: 35%">
    <h2 class="display-4">Related Topics</h2>
    <hr />
    <div class="w-100 h-75 overflow-scroll noBar">
        @foreach (var relatedTopic in @Model.RelatedTopics.SelectMany(i => i.RankedKeywords))
        {
            <p><a href="@relatedTopic.Link">(@relatedTopic.Topic.Type) @relatedTopic.Topic.Title - @relatedTopic.FormattedValue</a></p>
            <hr />
        }
    </div>
</div>

<div class="position-fixed w-25 h-75 overflow-hidden" style="top: 25%; left: 65%">
    <h2 class="display-4">Geographical Trends</h2>
    <hr />
    <div class="w-100 h-75 overflow-scroll noBar">
        @foreach (var geoMap in @Model.GeoMapData.OrderByDescending(i => i.Value.FirstOrDefault()).Take(25))
        {
            if (geoMap.Value.FirstOrDefault() == 0)
            {
                continue;
            }
            <p>(@geoMap.GeoCode) @geoMap.GeoName - @geoMap.Value.FirstOrDefault()</p>
            <hr />
        }
    </div>
</div>

@section Scripts {
    @{
        var timelineInOrder = Model.TimeLineData.OrderBy(i => i.ManagedTime);
        var jsLabels = string.Join(",", timelineInOrder.Select(i => $"'{i.ManagedTime:yy-MMM-dd hh-tt}'"));
        var jsData = string.Join(",", timelineInOrder.Select(i => $"'{i.Value.FirstOrDefault()}'"));
    }
    <script>
        var colors = ['#007bff', '#28a745', '#333333', '#c3e6cb', '#dc3545', '#6c757d'];

        var timeChart = document.getElementById("timeChart");
        var chartData = {
            labels: [@Html.Raw(jsLabels)],
            datasets: [{
                data: [@Html.Raw(jsData)],
                backgroundColor: 'transparent',
                borderColor: '#176AC7',
                borderWidth: 2,
                pointBackgroundColor: '#6192C6'
            }]
        };

        if (timeChart) {
            new Chart(timeChart, {
                type: 'line',
                data: chartData,
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: false
                            }
                        }]
                    },
                    legend: {
                        display: false
                    },
                    responsive: true
                }
            });
        }

    </script>
}